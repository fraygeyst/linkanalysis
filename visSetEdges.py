#########################
### Generating a console log in JSON format for the edges of linkanalysis
#
### Requirements: 
#   -there are two topic models, one with 10.000 fetched tweets and one with 100.000
#   -ordered list with node id's
#   -processed list is found in /Datenaufbereitung 10.000/Linkanalyse 10.000.xlsx and /Datenaufbereitung 100.000/Linkanalyse 100.000.xlsx
#   -all topics have 5 words connected to each other
#   -5 variables as placeholder for every word in each topic
#   -for each kind of topic model an array with the ordered list items 
# 
### Function
#   -for each kind of linkanalysis a for loop 
#   -the loop makes all possibilities of connections as edges
#   -with print statements, the console log is made to
#   -after each full print block, the variables are summarized with 5, to go to the next topic
# 
### Results:
#   -Console log with the edges for the linkanalysis
#   -stored in JSON ready format 
#   -final results stored in /Datenaufbereitung 10.000/visEdges10.000.json and /Datenaufbereitung 100.000/visEdges100.000.json
#########################


i = 0
j = 1
k = 2
l = 3
m = 4
a = [0	,1	,2	,3	,4	,5	,20	,7	,8	,9	,10	,11	,12	,5	,13	,14	,15	,16	,216,9	,167,15	,16	,17	,18	,19	,20	,15	,21	,22	,23	,24	,25	,26	,27	,11	,31	,5	,31	,32	,33	,34	,35	,36	,37	,38	,39	,0	,13	,42	,0	,43	,44	,31	,45	,46	,15	,0	,47	,48	,49	,105,51	,52	,53	,54	,55	,56	,57	,58	,59	,60	,61	,62	,63	,64	,65	,66	,67	,68	,69	,70	,71	,72	,73	,74	,75	,76	,77	,0	,78	,79	,5	,80	,13	,81	,76	,82	,83	,84	,85	,86	,72	,15	,87	,88	,60	,89	,90	,15	,91	,92	,93	,94	,50	,95	,13	,96	,97	,0	,31	,98	,15	,99	,100,101,15	,0	,102,103,104,105,123,106,76	,108,15	,0	,109,110,111,112,15	,113,114,115,116,117,15	,0	,118,119,15	,120,121,122,123,124,125,26	,126,127,5	,128,96	,129,130,15	,29	,131,132,133,134,53	,135,84	,72	,136,6	,137,138,60	,139,140,141,142,15	,31	,143,144,145,146,147,148,149,150,151,152,15	,153,154,155,156,157,158,96	,159,31	,15	,96	,160,161,162,163,164,110,126,165,100,5	,166,167,15	,168,169,170,171,172,173,174,175,176,177,214,15	,178,10	,179,180,181,15	,182,183,184,185,186,15	,187,188,189,31	,15	,190,11	,45	,13	,30	,191,192,193,100,33	,194,195,196,197,126,41	,198,199,200,201,202,53	,203,204,205,15	,206,207,217,15	,60	,208,209,210,211,212,215,5	,213,28	,214,15	,30	,15	,0	,5	,13	,40	,]
b = [213	,323	,28	,175	,77	,172	,124	,288	,173	,206	,202	,306	,53	,253	,257	,269	,81	,72	,45	,271	,270	,308	,45	,205	,171	,45	,192	,2	,232	,225	,80	,274	,27	,87	,112	,203	,284	,75	,278	,238	,7	,60	,59	,80	,94	,307	,198	,263	,102	,24	,25	,223	,119	,183	,298	,109	,45	,104	,233	,7	,50	,136	,287	,138	,45	,199	,248	,143	,45	,244	,294	,221	,45	,317	,15	,258	,101	,217	,99	,103	,252	,265	,321	,5	,302	,111	,242	,55	,255	,45	,107	,215,63	,190	,304	,108	,250	,230	,45	,314	,37	,59	,267	,36	,123	,30	,265	,82	,105	,118	,295	,83	,312	,16	,219	,228	,135	,6	,209	,281	,46	,39	,218	,245	,227	,179	,80	,47	,195	,163	,66	,126	,299	,163	,80	,45	,204	,68	,162	,186	,240	,319	,333	,241	,182	,246	,283	,210	,290	,174	,180	,234	,215	,41	,256	,265	,112	,142	,307	,80	,239	,45	,226	,80	,54	,116	,98	,45	,311	,166	,273	,114	,188	,19	,265	,22	,86	,115	,14	,147	,140	,326	,141	,167	,175	,113	,181	,152	,122	,34	,106	,158	,48	,125	,79	,84	,85	,17	,88	,18	,45	,169	,146	,178	,170	,211	,64	,328	,57	,165	,7	,229	,120	,127	,215	,35	,184	,212	,45	,91	,49	,45	,26	,249	,133	,71	,45	,70	,292	,310	,144	,303	,23	,89	,214	,90	,259	,151	,33	,65	,194	,12	,3	,170	,45	,117	,301	,132	,110	,92	,318	,309	,29	,156	,59	,40	,42	,305	,164	,7	,45	,150	,197	,265	,291	,128	,275	,52	,4	,268	,193	,96	,325	,76	,272	,7	,58	,1	,251	,8	,201	,73	,316	,266	,45	,320	,45	,332	,296	,136	,160	,231	,313	,159	,62	,134	,286	,153	,93	,157	,170	,145	,194	,20	,262	,32	,155	,264	,154	,80	,121	,297	,97	,7	,78	,237	,45	,280	,293	,95	,176	,243	,276	,220	,45	,282	,45	,222	,100	,196	,43	,45	,331	,38	,131	,189	,11	,161	,45	,247	,289,45	,9	,329	,56	,149	,191	,279	,200	,254	,315	,10	,7	,129	,44	,187	,13	,261	,45	,130	,51	,137	,69	,45	,67	,45	,21	,277	,31	,61	,45	,285	,327	,139	,177	,322	,260	,324	,45	,289	,45	,224	,208	,168	,74	,53	,236	,207	,300	,185	,330	,216	,148	,235	,7	,45	,265	,7	,80	,136	,]


# Topic model with 10.000 analyzed tweets
#for x in range (1,61):
    ###DEBUG
    # print('Topic: '+ str(x))
#    print('{"from": ' + str(a[i]) + ', "to": ' + str(a[j]) + "},")
#    print('{"from": ' + str(a[i]) + ', "to": ' + str(a[k]) + "},")
#    print('{"from": ' + str(a[i]) + ', "to": ' + str(a[l]) + "},")
#    print('{"from": ' + str(a[i]) + ', "to": ' + str(a[m]) + "},")
#    print('{"from": ' + str(a[j]) + ', "to": ' + str(a[k]) + "},")
#    print('{"from": ' + str(a[j]) + ', "to": ' + str(a[l]) + "},")
#    print('{"from": ' + str(a[j]) + ', "to": ' + str(a[m]) + "},")
#    print('{"from": ' + str(a[k]) + ', "to": ' + str(a[l]) + "},")
#    print('{"from": ' + str(a[k]) + ', "to": ' + str(a[m]) + "},")
#    print('{"from": ' + str(a[l]) + ', "to": ' + str(a[m]) + "},")
#    i = i + 5
#    j = j + 5
#    k = k + 5
#    l = l + 5
#    m = m + 5
#    x = x + 1

# Topic model with 100.000 analyzed tweets
for x in range (1,81):
    ###DEBUG
    # print('Topic: '+ str(x))
    print('{"from": ' + str(b[i]) + ', "to": ' + str(b[j]) + "},")
    print('{"from": ' + str(b[i]) + ', "to": ' + str(b[k]) + "},")
    print('{"from": ' + str(b[i]) + ', "to": ' + str(b[l]) + "},")
    print('{"from": ' + str(b[i]) + ', "to": ' + str(b[m]) + "},")
    print('{"from": ' + str(b[j]) + ', "to": ' + str(b[k]) + "},")
    print('{"from": ' + str(b[j]) + ', "to": ' + str(b[l]) + "},")
    print('{"from": ' + str(b[j]) + ', "to": ' + str(b[m]) + "},")
    print('{"from": ' + str(b[k]) + ', "to": ' + str(b[l]) + "},")
    print('{"from": ' + str(b[k]) + ', "to": ' + str(b[m]) + "},")
    print('{"from": ' + str(b[l]) + ', "to": ' + str(b[m]) + "},")
    i = i + 5
    j = j + 5
    k = k + 5
    l = l + 5
    m = m + 5
    x = x + 1
